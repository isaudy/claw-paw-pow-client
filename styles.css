/* @import '~bootstrap/scss/bootstrap'; */

*, *::after, *::before {
  box-sizing: border-box;
}
/*root targets the html(when in html), below it is used to control the size of
board game*/
:root {
  /* used to calculate the size of the screen and create a proportional game board.
  more information: https://www.w3schools.com/cssref/css_units.asp */
  --cell-size: 100px;
  /*variable created to recall perfect dimensions in the game*/
  --mark-size: calc(var(--cell-size) * .9);
}

body {
  margin: 0;
}

.board {
  /* "vh" & "vw" are used to create a porportional element to the size of the screen.
  more information: https://www.w3schools.com/cssref/css_units.asp*/
  width: 100vw;
  height: 100vh;
  display: grid;
  position: relative;
  top: -20;
  left: 0;
  right: 3;
  bottom: 20;
  justify-content: center;
  align-content: center;
  /* justify-items: center; */
  align-items: center;
  grid-template-columns: repeat(3, auto);
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
  /* controls the color of the X/O before pressing, on hover */
  background-color: lightgrey;
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:nth-child(3n + 1) {
  border-left: none;
}

.cell:nth-child(3n + 3) {
  border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
  border-bottom: none;
}

.cell.x,
.cell.circle {
  /* hides the cursor after selecting an option */
  cursor: none;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before {
  /* Controls the color of the buttons after pressing */
  background-color: black;
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  content: '';
  position: absolute;
  width: calc(var(--mark-size) * .15);
  height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
  transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
  transform: rotate(-45deg);
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  content: '';
  position: absolute;
  border-radius: 50%;
}

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--mark-size) * .7);
  height: calc(var(--mark-size) * .7);
  background-color: white;
}

.heading {
  /* font-size: 20px; <- play with vh, vw */
  /* justify-content: center;
  align-content: center; */
  /* align-items: center; */
  text-align: center;
  color: white;
}

.heading-container {
  display: flex;
  background-color: #4CAF50;
  justify-content: center;
  align-items: baseline;
  margin: 10px;
  padding: 20px;
}

.heading-container > title {
  display: inline-flex;
  background-color: #4CAF50;
  border-top: 3px solid white;
  border-bottom: 3px solid white;
  border-left: none;
  border-right: none;
  margin: 10px;
  padding: 20px;
  font-size: 3.5vw;
}

.message {
  display: flex;
  background-color: #4CAF50;
  border-top: 3px solid white;
  border-bottom: 3px solid white;
  border-left: none;
  border-right: none;
  margin: 10px;
  padding: 20px;
  font-size: 3.5vw;
}

/* controls the container which holds the new game button and img */
.initialize {
  margin: auto;
  width: 100%;
  flex-direction: column;
  justify-content: center;
}


.initialize > img {
  display: block;
  margin-left: auto;
  margin-right: auto;
  /* width: 50% */
  width: 500px;
  width: 50vh;
  margin-top: 20px;
}

.initial-credentials {
  flex: auto;
  display: block;
  margin-top: 30px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}

.subheading {
  display: flex;
  justify-content: center;
  /* align-self: auto | flex | center | center | flex */
  text-align: center;
  font-size: 2vh;
  color: green;
}

.newGameButton-initial {
width: 80%;
background-color: #4CAF50;
color: white;
border-radius: 12px;
padding: 15px 32px;
font-size: 4vh;
margin-top: 35px;
display: block;
margin-left: auto;
margin-right: auto;
border: none;
}

.newGameButton-initial:hover {
  background-color: white;
  border: 3px solid #4CAF50;
  color: black;
  width: 80%;
  border-radius: 12px;
  padding: 15px 32px;
  font-size: 4vh;
}

.message {
  display: flex;
  justify-content: center;
  /* align-self: auto | flex | center | center | flex */
  text-align: center;
  font-size: 1.2vh;
  color: green;
}

.winning-message {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, .7);
  justify-content: center;
  align-items: center;
  color: white;
  font-size: 5rem;
  flex-direction: column;
}

.winning-message button {
  font-size: 3rem;
  background-color: white;
  border: 1px solid black;
  padding: .25em .5em;
  cursor: pointer;
}

.winning-message button:hover {
  background-color: black;
  color: white;
  border-color: white;
}

.winning-message.show {
  display: flex;
}
